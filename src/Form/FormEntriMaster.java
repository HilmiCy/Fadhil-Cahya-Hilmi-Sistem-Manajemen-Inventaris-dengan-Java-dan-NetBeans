/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Form;

import ClassDatabase.ClassDatabase;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Fadhil
 */
public class FormEntriMaster extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormEntriMaster
     */
    public FormEntriMaster() {
        super("Menu Form Entri Barang |Administrator Fadhil Cahya Hilmi");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kodeBarangTF = new javax.swing.JTextField();
        namaTF = new javax.swing.JTextField();
        hargaBeliTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tampilkanBtn = new javax.swing.JButton();
        tampilkanTF = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelData = new javax.swing.JTable();
        hargaJualTF = new javax.swing.JTextField();
        stokTF = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("FORM ENTRI DATA MASTER BARANG");
        jLabel1.setToolTipText("");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Kode Barang");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Nama Barang");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Harga Beli");

        kodeBarangTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                kodeBarangTFCaretUpdate(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Harga Jual");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Stok");

        tampilkanBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tampilkanBtn.setText("Tampilkan");
        tampilkanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampilkanBtnActionPerformed(evt);
            }
        });

        tampilkanTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tampilkanTFKeyPressed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        editBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        editBtn.setText("EDIT");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        closeBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        closeBtn.setText("CLOSE");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        tabelData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Barang", "Nama Barang", "Harga Beli", "Harga Jual", "Stok"
            }
        ));
        jScrollPane3.setViewportView(tabelData);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tampilkanBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tampilkanTF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel2))
                            .addGap(28, 28, 28)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hargaBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(namaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(kodeBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hargaJualTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(stokTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                .addComponent(editBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kodeBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(saveBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hargaBeliTF)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hargaJualTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stokTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tampilkanTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tampilkanBtn))))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kodeBarangTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_kodeBarangTFCaretUpdate
        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM master where kode_barang = '" + this.kodeBarangTF.getText() + "'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()){
                this.namaTF.setText(r.getString(2));
                this.hargaBeliTF.setText(r.getString("harga_beli"));
                this.hargaJualTF.setText(r.getString("harga_jual"));
                this.stokTF.setText(r.getString("stok"));
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan" + e);
        }
    }//GEN-LAST:event_kodeBarangTFCaretUpdate

    private void tampilkanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampilkanBtnActionPerformed
        DefaultTableModel tabelTampil1 = new DefaultTableModel();
        tabelTampil1.addColumn("kode_barang");
        tabelTampil1.addColumn("nama");
        tabelTampil1.addColumn("harga_beli");
        tabelTampil1.addColumn("harga_jual");
        tabelTampil1.addColumn("stok");
        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM master WHERE kode_barang LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR nama LIKE '%" + tampilkanTF.getText() + "%'" + "OR harga_beli LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR harga_jual LIKE '%" + tampilkanTF.getText() + "%'" + "OR stok LIKE '%" + tampilkanTF.getText() + "%'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                tabelTampil1.addRow(new Object[] {
                    r.getString(1),
                    r.getString(2),
                    r.getString(3),
                    r.getString(4),
                    r.getString(5),
                });}
                tabelData.setModel(tabelTampil1);
            } catch (Exception e){
            }
    }//GEN-LAST:event_tampilkanBtnActionPerformed

    private void tampilkanTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tampilkanTFKeyPressed
        DefaultTableModel tabelTampil1 = new DefaultTableModel();
        tabelTampil1.addColumn("kode_barang");
        tabelTampil1.addColumn("nama");
        tabelTampil1.addColumn("harga_beli");
        tabelTampil1.addColumn("harga_jual");
        tabelTampil1.addColumn("stok");
        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM master WHERE kode_barang LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR nama LIKE '%" + tampilkanTF.getText() + "%'" + "OR harga_beli LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR harga_jual LIKE '%" + tampilkanTF.getText() + "%'" + "OR stok LIKE '%" + tampilkanTF.getText() + "%'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                tabelTampil1.addRow(new Object[] {
                    r.getString(1),
                    r.getString(2),
                    r.getString(3),
                    r.getString(4),
                    r.getString(5),
                });}
                tabelData.setModel(tabelTampil1);
            } catch (Exception e){
            }
    }//GEN-LAST:event_tampilkanTFKeyPressed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        kodeBarangTF.setText("");
        namaTF.setText("");
        hargaBeliTF.setText("");
        hargaJualTF.setText("");
        stokTF.setText("");
        kodeBarangTF.requestFocus();
    }//GEN-LAST:event_addBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        int saham = 0;
        
        String kode_barang = this.kodeBarangTF.getText();
        String nama = this.namaTF.getText();
        int harga_beli = Integer.parseInt(hargaBeliTF.getText());
        String harga_jual = this.hargaJualTF.getText();
        int stok = Integer.parseInt(stokTF.getText());
        
        saham = stok * harga_beli;
        
        String harga_beli1 = this.hargaBeliTF.getText();
        String stok1 = this.stokTF.getText();
        String saham1 = Integer.toString(saham);
        
        if (kodeBarangTF.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
        } else {
            if (namaTF.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Data Belum Lengkap, Nama Barang Tidak Boleh Kosong");
            }
            else {
                if (hargaBeliTF.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this,"Data Belum Lengkap, Harga Beli Tidak Boleh Kosong");
                }
                else {
                    if (hargaJualTF.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this,"Data Belum Lengkap, Harga Jual Tidak Boleh Kosong");
                    }
                    else {
                        if (stokTF.getText().isEmpty()){
                            JOptionPane.showMessageDialog(this,"Data Belum Lengkap, Stok Tidak Boleh Kosong");
                        }
                        else {
                            try {
                                Connection c = ClassDatabase.getkoneksi();
                                String sql = "INSERT INTO master values (?, ?, ?, ?, ?, ?)";
                                PreparedStatement p = (PreparedStatement) c.prepareStatement(sql);
                                p.setString(1, kode_barang);
                                p.setString(2, nama);
                                p.setString(3, harga_beli1);
                                p.setString(4, harga_jual);
                                p.setString(5, stok1);
                                p.setString(6, saham1);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this,"Sukses Tambah Data");
                            } catch (SQLException e){
                                System.out.println(e);
                            } finally {
                            }
                        }
                    }
                }
            }
        }
        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM master";
            ResultSet r = s.executeQuery(sql);
            tabelData.setModel(DbUtils.resultSetToTableModel(r));
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String kode_barang = this.kodeBarangTF.getText();
        String nama = this.namaTF.getText();
        String harga_beli = this.hargaBeliTF.getText();
        String harga_jual = this.hargaJualTF.getText();
        String stok = this.stokTF.getText();
        if (kodeBarangTF.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
        } else {
            if (namaTF.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Nama Barang Tidak Boleh Kosong");
            }
            else {
                if (hargaBeliTF.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Beli Tidak Boleh Kosong");
                }
                else {
                    if (hargaJualTF.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Jual Tidak Boleh Kosong");
                    }
                    else {
                        if (stokTF.getText().isEmpty()){
                            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Stok Tidak Boleh Kosong");
                        }
                        else {
                            try {
                                Connection c = ClassDatabase.getkoneksi();
                                String sql = "UPDATE `fadhil`.`master` SET `nama` = ?, `harga_beli` = ?, `harga_jual` = ?, `stok` = ? WHERE `kode_barang` = ?";
                                PreparedStatement p = (PreparedStatement) c.prepareStatement(sql);
                                p.setString(5, kode_barang);
                                p.setString(1, nama);
                                p.setString(2, harga_beli);
                                p.setString(3, harga_jual);
                                p.setString(4, stok);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this,"Sukses Update Data");
                            } catch (SQLException e){
                                System.out.println(e);
                            } finally {
                            }
                        }
                    }
                }
            }
        }
        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM master";
            ResultSet r = s.executeQuery(sql);
            tabelData.setModel(DbUtils.resultSetToTableModel(r));
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String kode_barang = this.kodeBarangTF.getText();

        try {
            Connection c = ClassDatabase.getkoneksi();
            String sql = "DELETE FROM master WHERE kode_barang = ?";
            PreparedStatement p = (PreparedStatement) c.prepareStatement(sql);
            p.setString(1, kode_barang);

            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(this, "Sukses Hapus Data");
        } catch (SQLException e) {
            System.out.println(e);
        } finally {
        }

        try {
            Connection c = ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM master";
            ResultSet r = s.executeQuery(sql);
            tabelData.setModel(DbUtils.resultSetToTableModel(r));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        int ex = JOptionPane.showConfirmDialog(null, "Apakah Anda akan Keluar?", "Anda Yakin?",
            JOptionPane.YES_NO_OPTION);
        if (ex == 0) {
            dispose();
        }
    }//GEN-LAST:event_closeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField hargaBeliTF;
    private javax.swing.JTextField hargaJualTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField kodeBarangTF;
    private javax.swing.JTextField namaTF;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField stokTF;
    private javax.swing.JTable tabelData;
    private javax.swing.JButton tampilkanBtn;
    private javax.swing.JTextField tampilkanTF;
    // End of variables declaration//GEN-END:variables
}
